{"version":3,"sources":["components/Record.js","components/TaskList.js","App.js","index.js"],"names":["Log","Airtable","apiKey","base","table","Todo","fin","element","document","getElementById","props","id","style","opacity","update","then","resp","console","log","borderColor","borderWidth","propose","create","concluded","openInAt","window","open","href","this","className","name","onClick","Component","airtable","TaskList","useState","activities","setActivities","useEffect","list","maxRecords","pageSize","view","cellFormat","data","records","catch","error","cycle","length","filter","record","fields","sort","a","b","map","name_string","App","run","reRun","ReactDOM","render","tasks"],"mappings":"8OAGMA,EAAM,IAAIC,IAAS,CAACC,OAAQ,sBAC7BC,KAAK,qBACLC,MAAM,OA2EIC,E,4MAxEXC,IAAM,WACF,IAAIC,EAAUC,SAASC,eAAe,EAAKC,MAAMC,IACjDJ,EAAQK,MAAMC,QAAU,MAExBb,EAAIc,OAAO,EAAKJ,MAAMC,GAAI,CAAC,KAAO,IAAOI,MAAK,SAAAC,GAC1CC,QAAQC,IAAI,eAAiB,EAAKR,MAAMC,IACxCM,QAAQC,IAAIF,GAEZT,EAAQK,MAAMO,YAAc,MAC5BZ,EAAQK,MAAMQ,YAAc,a,EAIpCC,QAAU,WACN,IAAId,EAAUC,SAASC,eAAe,EAAKC,MAAMC,IACjDJ,EAAQK,MAAMC,QAAU,MAExBb,EAAIsB,OACA,CAAC,OAAU,CACP,QAAS,CAAC,EAAKZ,MAAMC,IACrB,QAAW,UACX,UAAW,KAEjBI,MAAK,SAAAC,GACHC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,cAAgB,EAAKR,MAAMa,WAEvChB,EAAQK,MAAMO,YAAc,SAC5BZ,EAAQK,MAAMQ,YAAc,a,EAMpCI,SAAW,WACPP,QAAQC,IAAI,uBACZO,OAAOC,KAAK,4DAA8D,EAAKhB,MAAMC,K,4CAGzF,WAAU,IAAD,OACL,OACA,8BACI,oBAAGgB,KAAQC,KAAKD,KAAME,UAAU,mJAAmJlB,GAAIiB,KAAKlB,MAAMC,GAAlM,UACI,qBAAKkB,UAAU,WAAf,SACI,qBAAKA,UAAU,sCAAf,SAAsDD,KAAKlB,MAAMoB,SAErE,sBAAKD,UAAU,mBAAf,UACI,wBAAQE,QAAS,kBAAM,EAAKV,WACpBQ,UAAW,gIADnB,qBAMA,wBAAQE,QAAS,kBAAM,EAAKzB,OACpBuB,UAAW,gIADnB,iBAMA,wBAAQE,QAAS,kBAAM,EAAKP,YACpBK,UAAW,gIADnB,kC,GA5DDG,aCHbC,EAAW,IAAIhC,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,cAEI,SAAS8B,EAASxB,GAAQ,IAAD,EAEAyB,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAuBpC,OAnBAC,qBAAU,WACNL,EAASM,KAAK,CACVC,WAAY,IACZC,SAAU,IACVC,KAAM,oBACNC,WAAY,SAEf5B,MAAK,SAAC6B,GACHP,EAAcO,EAAKC,YAEtBC,OAAM,SAACC,GACJ9B,QAAQC,IAAI6B,QAEjB,IAEH9B,QAAQC,IAAIkB,GAEZnB,QAAQC,IAAI,WAAaR,EAAMsC,OAG3B,qBAAKnB,UAAU,oDAAf,SACKO,EAAWa,OAAS,EACjBb,EACCc,QAAO,SAAAC,GAAM,OAAsC,IAAlCA,EAAOC,OAAO,mBAC/BF,QAAO,SAAAC,GAAM,OAA6B,IAAzBA,EAAOC,OAAP,OACjBC,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEF,OAAF,SAAuBG,EAAEH,OAAF,SAAwB,EAAMG,EAAEH,OAAF,SAAuBE,EAAEF,OAAF,UAAyB,EAAI,KACxHI,KAAI,SAACL,GAAD,OACD,cAAC,EAAD,CACIrB,KAAMqB,EAAOC,OAAOK,YAEpB9C,GAAIwC,EAAOxC,IADNwC,EAAOxC,OAKpB,+ECqBD+C,MAhEf,SAAahD,GAAQ,IAAD,EACGyB,mBAAS,IADZ,mBACXwB,EADW,KACNC,EADM,KAqClB,OAnCA3C,QAAQC,IAAIyC,GAoCV,qBAAK9B,UAAU,yBAAf,SAgBE,qBAAKA,UAAU,0BAAf,SACE,cAACK,EAAD,CACEgB,OAAO,QACPU,MAAOA,SCpDjBC,IAASC,OACP,cAAC,EAAD,CAAKC,MAHM,KAIXvD,SAASC,eAAe,W","file":"static/js/main.67b9aae3.chunk.js","sourcesContent":["import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\n\nconst Log = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nclass Todo extends Component {\n    fin = () => {\n        var element = document.getElementById(this.props.id);\n        element.style.opacity = \"0.1\";\n\n        Log.update(this.props.id, {\"Fin\": true}).then(resp => {\n            console.log(\"Mark as fin \" + this.props.id)\n            console.log(resp)\n            \n            element.style.borderColor = \"red\";\n            element.style.borderWidth = \"medium\";\n        })\n    }\n\n    propose = () => {\n        var element = document.getElementById(this.props.id);\n        element.style.opacity = \"0.2\";\n        \n        Log.create(\n            {\"fields\": {\n                \"What?\": [this.props.id],\n                \"Context\": \"Leisure\",\n                \"Group #\": 5\n            }}\n        ).then(resp => {\n            console.log(resp)\n            console.log(\"Concluded? \" + this.props.concluded)\n            \n            element.style.borderColor = \"yellow\";\n            element.style.borderWidth = \"medium\";\n        })\n    }\n\n    /* let atHref = \"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg\" + this.props.id; */\n\n    openInAt = () => {\n        console.log(\"Opening in Airtable\")\n        window.open(\"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg/\" + this.props.id)\n    }\n    \n    render() {\n        return (\n        <div>\n            <a href = {this.href} className=\"shadow-md hover:shadow-lg active:border-gray-500 group block rounded-lg p-4 border hover:border-gray-200 m-2 text-left justify-left text-justify\" id={this.props.id}>\n                <div className=\"p-3 grid\">\n                    <div className=\"font-medium text-black text-xl pb-2\">{this.props.name}</div>\n                </div>\n                <div className=\"grid grid-cols-3\">\n                    <button onClick={() => this.propose()}\n                            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                        >\n                            Propose\n                    </button>\n\n                    <button onClick={() => this.fin()}\n                            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                        >\n                            Fin\n                    </button>\n\n                    <button onClick={() => this.openInAt()}\n                            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                        >\n                            Airtable\n                    </button>\n                </div>\n            </a>\n                \n        </div>\n        );\n    }\n}\n\nexport default Todo","import React, { useState, useEffect } from 'react'\nimport Todo from \"./Record\";\nimport Airtable from 'airtable-node'\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Activities')\n\nexport default function TaskList(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"L: All activities\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"justify-center max-w-full w-full grid grid-cols-2\">\n            {activities.length > 0 ? (\n                activities\n                .filter(record => record.fields[\"Show in menu\"] === 1)\n                .filter(record => record.fields[\"Fin\"] !== true)\n                .sort((a,b) => (a.fields[\"Rting_UL\"] < b.fields[\"Rting_UL\"]) ? 1 : ((b.fields[\"Rting_UL\"] < a.fields[\"Rting_UL\"]) ? -1 : 0))\n                .map((record) => (\n                    <Todo\n                        name={record.fields.name_string}\n                        key={record.id}\n                        id={record.id}\n                    />\n                ))\n            ) : (\n                <p>Fetching value-shepherd if any uncompleted...</p>\n            )}\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport TaskList from './components/TaskList'\n\nfunction App(props) {\n  const [run, reRun] = useState({});\n  console.log(run)\n  /* // Get goals for filter button list\n  const [goals, setGoals] = useState({});\n\n  useState(() => {\n    airtable.list({\n        maxRecords: 999,\n        pageSize: 100,\n        view: 'Grid view',\n        cellFormat: 'json'\n    })\n    .then((data) => {\n        setGoals(data.records);\n        console.log(goals)\n    })\n    .catch((error) => {\n        console.log(error);\n    });\n  }, []);\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n  }\n\n  shuffleArray(goals)\n\n  // Use filter button to filter task list\n  const [filter, setFilter] = useState(null);\n  */\n\n  return (\n    <div className=\"grid mx-auto max-w-3xl\">\n        {/* <ul className=\"grid grid-cols-2\">\n          {goals.length > 0 ? (\n              goals\n              .filter(record => record.fields.Name.length < 100)\n              .slice(0, 6)\n              .map((record) => (\n                  <FilterButton\n                      name={record.fields.Name}\n                      setFilter={setFilter}\n                  />\n              ))\n          ) : (\n              <p>Fetching Data...</p>\n          )}\n          </ul> */}\n      <div className=\"grid place-items-center\">\n        <TaskList \n          filter=\"False\"\n          reRun={reRun}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//create a new Airtable object in React \nconst DATA = []\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}