{"version":3,"sources":["components/Record.js","components/TaskList.js","components/ValueCard.js","components/ValueList.js","App.js","index.js"],"names":["Log","Airtable","apiKey","base","table","Component","Values","ValueCard","propose","element","document","getElementById","props","id","style","opacity","update","then","resp","console","log","borderColor","borderWidth","openInAt","window","open","href","this","className","name","onClick","airtable","ValueList","useState","values","setValues","useEffect","list","maxRecords","pageSize","view","cellFormat","data","records","catch","error","cycle","length","filter","record","fields","map","Name","App","run","reRun","ReactDOM","render","tasks"],"mappings":"gPAGMA,EAAM,IAAIC,IAAS,CAACC,OAAQ,sBAC7BC,KAAK,qBACLC,MAAM,OAEQC,YCHF,IAAIJ,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,cCHX,IAAME,EAAS,IAAIL,IAAS,CAACC,OAAQ,sBAChCC,KAAK,qBACLC,MAAM,OAiDIG,E,4MA9CXC,QAAU,WACN,IAAIC,EAAUC,SAASC,eAAe,EAAKC,MAAMC,IACjDJ,EAAQK,MAAMC,QAAU,MAExBT,EAAOU,OAAO,EAAKJ,MAAMC,GAAI,CAAC,UAAa,IAAII,MAAK,SAAAC,GAChDC,QAAQC,IAAIF,GAEZT,EAAQK,MAAMO,YAAc,SAC5BZ,EAAQK,MAAMQ,YAAc,a,EAMpCC,SAAW,WACPJ,QAAQC,IAAI,uBACZI,OAAOC,KAAK,4DAA8D,EAAKb,MAAMC,K,4CAGzF,WAAU,IAAD,OACL,OACA,8BACI,oBAAGa,KAAQC,KAAKD,KAAME,UAAU,mJAAmJf,GAAIc,KAAKf,MAAMC,GAAlM,UACI,qBAAKe,UAAU,WAAf,SACI,qBAAKA,UAAU,sCAAf,SAAsDD,KAAKf,MAAMiB,SAErE,sBAAKD,UAAU,mBAAf,UACI,wBAAQE,QAAS,kBAAM,EAAKtB,WACpBoB,UAAW,gIADnB,qBAMA,wBAAQE,QAAS,kBAAM,EAAKP,YACpBK,UAAW,gIADnB,kC,GAlCIvB,aCHlB0B,EAAW,IAAI9B,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,QAEI,SAAS4B,EAAUpB,GAAQ,IAAD,EAETqB,mBAAS,IAFA,mBAE9BC,EAF8B,KAEtBC,EAFsB,KAuBrC,OAnBAC,qBAAU,WACNL,EAASM,KAAK,CACVC,WAAY,IACZC,SAAU,IACVC,KAAM,gBACNC,WAAY,SAEfxB,MAAK,SAACyB,GACHP,EAAUO,EAAKC,YAElBC,OAAM,SAACC,GACJ1B,QAAQC,IAAIyB,QAEjB,IAEH1B,QAAQC,IAAIc,GAEZf,QAAQC,IAAI,WAAaR,EAAMkC,OAG3B,qBAAKlB,UAAU,oDAAf,SACKM,EAAOa,OAAS,EACbb,EACCc,QAAO,SAAAC,GAAM,OAAyC,IAArCA,EAAOC,OAAO,sBAC/BC,KAAI,SAACF,GAAD,OACD,cAAC,EAAD,CACIpB,KAAMoB,EAAOC,OAAOE,KAEpBvC,GAAIoC,EAAOpC,IADNoC,EAAOpC,OAKpB,gFCrBDwC,MAnBf,SAAazC,GAAQ,IAAD,EACGqB,mBAAS,IADZ,mBACXqB,EADW,KACNC,EADM,KAMlB,OAJApC,QAAQC,IAAIkC,GAKV,qBAAK1B,UAAU,yBAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,cAACI,EAAD,CACEgB,OAAO,QACPO,MAAOA,SCPjBC,IAASC,OACP,cAAC,EAAD,CAAKC,MAHM,KAIXhD,SAASC,eAAe,W","file":"static/js/main.52c9b3bf.chunk.js","sourcesContent":["import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\n\nconst Log = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nclass Todo extends Component {\n    fin = () => {\n        var element = document.getElementById(this.props.id);\n        element.style.opacity = \"0.1\";\n\n        Log.update(this.props.id, {\"Fin\": true}).then(resp => {\n            console.log(\"Mark as fin \" + this.props.id)\n            console.log(resp)\n            \n            element.style.borderColor = \"red\";\n            element.style.borderWidth = \"medium\";\n        })\n    }\n\n    propose = () => {\n        var element = document.getElementById(this.props.id);\n        element.style.opacity = \"0.2\";\n        \n        Log.create(\n            {\"fields\": {\n                \"What?\": [this.props.id],\n                \"Context\": \"Leisure\",\n                \"Group #\": 5\n            }}\n        ).then(resp => {\n            console.log(resp)\n            console.log(\"Concluded? \" + this.props.concluded)\n            \n            element.style.borderColor = \"yellow\";\n            element.style.borderWidth = \"medium\";\n        })\n    }\n\n    /* let atHref = \"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg\" + this.props.id; */\n\n    openInAt = () => {\n        console.log(\"Opening in Airtable\")\n        window.open(\"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg/\" + this.props.id)\n    }\n    \n    render() {\n        return (\n        <div>\n            <a href = {this.href} className=\"shadow-md hover:shadow-lg active:border-gray-500 group block rounded-lg p-4 border hover:border-gray-200 m-2 text-left justify-left text-justify\" id={this.props.id}>\n                <div className=\"p-3 grid\">\n                    <div className=\"font-medium text-black text-xl pb-2\">{this.props.name}</div>\n                </div>\n                <div className=\"grid grid-cols-3\">\n                    <button onClick={() => this.propose()}\n                            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                        >\n                            Propose\n                    </button>\n\n                    <button onClick={() => this.fin()}\n                            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                        >\n                            Fin\n                    </button>\n\n                    <button onClick={() => this.openInAt()}\n                            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                        >\n                            Airtable\n                    </button>\n                </div>\n            </a>\n                \n        </div>\n        );\n    }\n}\n\nexport default Todo","import React, { useState, useEffect } from 'react'\nimport Todo from \"./Record\";\nimport Airtable from 'airtable-node'\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Activities')\n\nexport default function TaskList(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"L: All activities\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    if (props.show === 1) {\n        return (\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2\">\n                {activities.length > 0 ? (\n                    activities\n                    .filter(record => record.fields[\"Show in menu\"] === 1)\n                    .filter(record => record.fields[\"Fin\"] !== true)\n                    .sort((a,b) => (a.fields[\"Rting_UL\"] < b.fields[\"Rting_UL\"]) ? 1 : ((b.fields[\"Rting_UL\"] < a.fields[\"Rting_UL\"]) ? -1 : 0))\n                    .map((record) => (\n                        <Todo\n                            name={record.fields.name_string}\n                            key={record.id}\n                            id={record.id}\n                        />\n                    ))\n                ) : (\n                    <p>Fetching value-shepherd if any uncompleted...</p>\n                )}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                Waiting to show\n            </div>\n        );\n    }\n\n    \n}\n","import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\n\nconst Values = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nclass ValueCard extends Component {\n    propose = () => {\n        var element = document.getElementById(this.props.id);\n        element.style.opacity = \"0.2\";\n        \n        Values.update(this.props.id, {\"Promotion\": 1}).then(resp => {\n            console.log(resp)\n            \n            element.style.borderColor = \"yellow\";\n            element.style.borderWidth = \"medium\";\n        })\n    }\n\n    /* let atHref = \"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg\" + this.props.id; */\n\n    openInAt = () => {\n        console.log(\"Opening in Airtable\")\n        window.open(\"https://airtable.com/tbl7pyCYwx12t7LHu/viwnPcTZz8PXg4Smt/\" + this.props.id)\n    }\n    \n    render() {\n        return (\n        <div>\n            <a href = {this.href} className=\"shadow-md hover:shadow-lg active:border-gray-500 group block rounded-lg p-4 border hover:border-gray-200 m-2 text-left justify-left text-justify\" id={this.props.id}>\n                <div className=\"p-3 grid\">\n                    <div className=\"font-medium text-black text-xl pb-2\">{this.props.name}</div>\n                </div>\n                <div className=\"grid grid-cols-3\">\n                    <button onClick={() => this.propose()}\n                            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                        >\n                            Endorse\n                    </button>\n\n                    <button onClick={() => this.openInAt()}\n                            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                        >\n                            Airtable\n                    </button>\n                </div>\n            </a>\n                \n        </div>\n        );\n    }\n}\n\nexport default ValueCard","import React, { useState, useEffect } from 'react'\nimport ValueCard from \"./ValueCard\";\nimport Airtable from 'airtable-node'\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Vals')\n\nexport default function ValueList(props) {\n\n    const [values, setValues] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"Weekly review\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setValues(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(values)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"justify-center max-w-full w-full grid grid-cols-2\">\n            {values.length > 0 ? (\n                values\n                .filter(record => record.fields[\"Value certainty\"] !== 1)\n                .map((record) => (\n                    <ValueCard\n                        name={record.fields.Name}\n                        key={record.id}\n                        id={record.id}\n                    />\n                ))\n            ) : (\n                <p>Fetching value-shepherd if any uncompleted...</p>\n            )}\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport TaskList from './components/TaskList'\nimport ValueList from './components/ValueList'\n\nfunction App(props) {\n  const [run, reRun] = useState({});\n  console.log(run)\n\n  var show = 0\n\n  return (\n    <div className=\"grid mx-auto max-w-3xl\">\n      <div className=\"grid place-items-center\">\n        <ValueList \n          filter=\"False\"\n          reRun={reRun}\n        />\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//create a new Airtable object in React \nconst DATA = []\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}